    // 							"name": "Find pet by ID",
    // 							"request": {
    // 								"auth": {
    // 									"type": "apikey",
    // 									"apikey": {
    // 										"key": "api_key",
    // 										"value": "{{apiKey}}",
    // 										"in": "header"
    // 									}
    // 								},
    // 								"method": "GET",
    // 								"header": [
    // 									{
    // 										"key": "Accept",
    // 										"value": "application/json"
    // 									}
    // 								],
    // 								"url": {
    // 									"raw": "{{baseUrl}}/pet/:petId",
    // 									"host": [
    // 										"{{baseUrl}}"
    // 									],
    // 									"path": [
    // 										"pet",
    // 										":petId"
    // 									],
    // 									"variable": [
    // 										{
    // 											"key": "petId",
    // 											"value": "<long>",
    // 											"description": "(Required) ID of pet to return"
    // 										}
    // 									]
    // 								},
    // 								"description": "Returns a single pet"
    // 							},
    // 							"response": [
    // 								{
    // 									"name": "successful operation",
    // 									"originalRequest": {
    // 										"method": "GET",
    // 										"header": [
    // 											{
    // 												"key": "Accept",
    // 												"value": "application/json"
    // 											},
    // 											{
    // 												"description": "Added as a part of security scheme: apikey",
    // 												"key": "api_key",
    // 												"value": "<API Key>"
    // 											}
    // 										],
    // 										"url": {
    // 											"raw": "https://petstore.swagger.io/v2/pet/:petId",
    // 											"protocol": "https",
    // 											"host": [
    // 												"petstore",
    // 												"swagger",
    // 												"io"
    // 											],
    // 											"path": [
    // 												"v2",
    // 												"pet",
    // 												":petId"
    // 											],
    // 											"variable": [
    // 												{
    // 													"key": "petId"
    // 												}
    // 											]
    // 										}
    // 									},
    // 									"status": "OK",
    // 									"code": 200,
    // 									"_postman_previewlanguage": "json",
    // 									"header": [
    // 										{
    // 											"key": "Content-Type",
    // 											"value": "application/json"
    // 										}
    // 									],
    // 									"cookie": [],
    // 									"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
    // 								},
    // 								{
    // 									"name": "Invalid ID supplied",
    // 									"originalRequest": {
    // 										"method": "GET",
    // 										"header": [
    // 											{
    // 												"description": "Added as a part of security scheme: apikey",
    // 												"key": "api_key",
    // 												"value": "<API Key>"
    // 											}
    // 										],
    // 										"url": {
    // 											"raw": "{{baseUrl}}/pet/:petId",
    // 											"host": [
    // 												"{{baseUrl}}"
    // 											],
    // 											"path": [
    // 												"pet",
    // 												":petId"
    // 											],
    // 											"variable": [
    // 												{
    // 													"key": "petId"
    // 												}
    // 											]
    // 										}
    // 									},
    // 									"status": "Not Found",
    // 									"code": 404,
    // 									"_postman_previewlanguage": "text",
    // 									"header": [],
    // 									"cookie": [],
    // 									"body": ""
    // 								},
    // 								{
    // 									"name": "Pet not found",
    // 									"originalRequest": {
    // 										"method": "GET",
    // 										"header": [
    // 											{
    // 												"description": "Added as a part of security scheme: apikey",
    // 												"key": "api_key",
    // 												"value": "<API Key>"
    // 											}
    // 										],
    // 										"url": {
    // 											"raw": "{{baseUrl}}/pet/:petId",
    // 											"host": [
    // 												"{{baseUrl}}"
    // 											],
    // 											"path": [
    // 												"pet",
    // 												":petId"
    // 											],
    // 											"variable": [
    // 												{
    // 													"key": "petId"
    // 												}
    // 											]
    // 										}
    // 									},
    // 									"status": "Not Found",
    // 									"code": 404,
    // 									"_postman_previewlanguage": "text",
    // 									"header": [],
    // 									"cookie": [],
    // 									"body": ""
    // 								}
    // 							]
    // 						}
   


```java
import com.epam.oleksii_dorofieiev.tests.Pet.Pet;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.RequestLoggingFilter;
import io.restassured.filter.log.ResponseLoggingFilter;
import io.restassured.http.ContentType;
import io.restassured.specification.RequestSpecification;
import org.junit.BeforeClass;
import org.junit.Test;

import static com.epam.oleksii_dorofieiev.tests.StatusCode.*;
import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.equalTo;

public class TestsPet {
    private static RequestSpecification requestSpec;

    private Pet petDog = new Pet(1, null, "Dog", null, null, "available");

    private static final String BASE_URL = "https://petstore.swagger.io";
    private static final String BASE_PATH = "/v2/pet/";
    private final String PET_NOT_FOUND = "Pet not found";
    private final int CONSTANT_VALUE_INT = 50000;
    private String ID = "id";
    private String PET_ID = "{petId}";
    private String NAME = "name";
    private String STATUS = "status";
    private String MESSAGE = "message";
    int notExistingId = CONSTANT_VALUE_INT; // Assuming CONSTANT_VALUE_INT is a non-existing ID

    @BeforeClass
    public static void initSpec() {
        requestSpec = new RequestSpecBuilder()
                .setBaseUri(BASE_URL)
                .setBasePath(BASE_PATH)
                .setContentType(ContentType.JSON)
                .addFilter(new ResponseLoggingFilter())
                .addFilter(new RequestLoggingFilter())
                .build();
    }

    @Test
    public void getPetsByExistingId() {
        int existingPetId = 1; // Assuming 1 is an existing pet ID for demonstration

        given().spec(requestSpec)
                .get(PET_ID, existingPetId)
                .then()
                .statusCode(OK_200)
                .and()
                .body(ID, equalTo(existingPetId));
    }

    @Test
    public void getPetsByNotExistingId() {
        given().spec(requestSpec)
                .get(PET_ID, notExistingId)
                .then()
                .statusCode(NOT_FOUND_404)
                .and()
                .body(MESSAGE, equalTo(PET_NOT_FOUND));
    }

    @Test
    public void testFindPetById_NotFound() {
        given().spec(requestSpec)
                .get(PET_ID, notExistingId)
                .then()
                .statusCode(NOT_FOUND_404)
                .and()
                .body(MESSAGE, equalTo(PET_NOT_FOUND));
    }
}
```